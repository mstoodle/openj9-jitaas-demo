# Copyright (c) 2018, 2018 IBM Corp. and others
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which accompanies this
# distribution and is available at https://www.eclipse.org/legal/epl-2.0/
# or the Apache License, Version 2.0 which accompanies this distribution and
# is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# This Source Code may also be made available under the following
# Secondary Licenses when the conditions for such availability set
# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU
# General Public License, version 2 with the GNU Classpath
# Exception [1] and GNU General Public License, version 2 with the
# OpenJDK Assembly Exception [2].
#
# [1] https://www.gnu.org/software/classpath/license.html
# [2] http://openjdk.java.net/legal/assembly-exception.html
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#


# Dockerfile used for creating a container with liberty+gRPC
# capable to run AcmeAir monolithic as a JITaaS client
# Must be running on the same network as the mongodb container
FROM open-liberty:webProfile7

USER root

# Need to provide openssl and grpc/protobuf
RUN apt-get update \
  && apt-get install -qq -y --no-install-recommends \
   libssl1.0.0

COPY grpc/roots.pem /usr/local/share/grpc/roots.pem
COPY grpc/*so.6.0.0 grpc/*so.15.0.0 grpc/*so.1.10.1 /usr/local/lib/
RUN    ln -sf libgpr.so.6.0.0 /usr/local/lib/libgpr.so.6 \
    && ln -sf libgpr.so.6.0.0 /usr/local/lib/libgpr.so \
    && ln -sf libgrpc.so.6.0.0 /usr/local/lib/libgrpc.so.6 \
    && ln -sf libgrpc.so.6.0.0 /usr/local/lib/libgrpc.so \
    && ln -sf libgrpc_cronet.so.6.0.0 /usr/local/lib/libgrpc_cronet.so.6 \
    && ln -sf libgrpc_cronet.so.6.0.0 /usr/local/lib/libgrpc_cronet.so \
    && ln -sf libgrpc_unsecure.so.6.0.0 /usr/local/lib/libgrpc_unsecure.so.6 \
    && ln -sf libgrpc_unsecure.so.6.0.0 /usr/local/lib/libgrpc_unsecure.so \
    && ln -sf libprotobuf-lite.so.15.0.0 /usr/local/lib/libprotobuf-lite.so.15 \
    && ln -sf libprotobuf-lite.so.15.0.0 /usr/local/lib/libprotobuf-lite.so \
    && ln -sf libprotobuf.so.15.0.0 /usr/local/lib/libprotobuf.so.15 \
    && ln -sf libprotobuf.so.15.0.0 /usr/local/lib/libprotobuf.so \
    && ln -sf libprotoc.so.15.0.0 /usr/local/lib/libprotoc.so.15 \
    && ln -sf libprotoc.so.15.0.0 /usr/local/lib/libprotoc.so \
    && ln -sf libgrpc++.so.1.10.1 /usr/local/lib/libgrpc++.so.6 \
    && ln -sf libgrpc++.so.1.10.1 /usr/local/lib/libgrpc++.so \
    && ln -sf libgrpc++.so.1.10.1 /usr/local/lib/libgrpc++.so.1 \
    && ln -sf libgrpc++_cronet.so.1.10.1 /usr/local/lib/libgrpc++_cronet.so.6 \
    && ln -sf libgrpc++_cronet.so.1.10.1 /usr/local/lib/libgrpc++_cronet.so \
    && ln -sf libgrpc++_cronet.so.1.10.1 /usr/local/lib/libgrpc++_cronet.so.1 \
    && ln -sf libgrpc++_error_details.so.1.10.1 /usr/local/lib/libgrpc++_error_details.so.6 \
    && ln -sf libgrpc++_error_details.so.1.10.1 /usr/local/lib/libgrpc++_error_details.so \
    && ln -sf libgrpc++_error_details.so.1.10.1 /usr/local/lib/libgrpc++_error_details.so.1 \
    && ln -sf libgrpc++_reflection.so.1.10.1 /usr/local/lib/libgrpc++_reflection.so.6 \
    && ln -sf libgrpc++_reflection.so.1.10.1 /usr/local/lib/libgrpc++_reflection.so \
    && ln -sf libgrpc++_reflection.so.1.10.1 /usr/local/lib/libgrpc++_reflection.so.1 \
    && ln -sf libgrpc++_unsecure.so.1.10.1 /usr/local/lib/libgrpc++_unsecure.so.6 \
    && ln -sf libgrpc++_unsecure.so.1.10.1 /usr/local/lib/libgrpc++_unsecure.so \
    && ln -sf libgrpc++_unsecure.so.1.10.1 /usr/local/lib/libgrpc++_unsecure.so.1

ENV LD_LIBRARY_PATH=/usr/local/lib

# Copy the JITaaS SDK
COPY j2sdk-image /opt/openjdk8-openj9
COPY server_nojit2.xml /config/server.xml
COPY mongo.properties /config/mongo.properties
COPY acmeair-webapp-2.0.0-SNAPSHOT.war /config/apps
ENV ACMEAIR_PROPERTIES=/config/mongo.properties

ENV JITSERVER_IP=192.168.0.11

# JITaaS has no AOT support at this time (will change): use -Xnoaot
# -XJITaaSClient:server=<IP> directs the JVM to use the remote JIT service hosted at IP (default port is 38400)
# -Xjit:sampleThreshold=0,scorchingSampleThreshold=0 makes it impossible to do hot/scorching compilations, which tend to take a long
#     time and have little effect on AcmeAir performance; this should really be part of JITaaS default tuning
ENV JVM_ARGS="-Xshareclasses:controlDir=/cache,name=server_nojit -Xnoaot -XX:+UseContainerSupport -XX:JITaaSClient:server=$JITSERVER_IP -Xjit:sampleThreshold=0,scorchingSampleThreshold=0,verbose={compilePerformance},verbose={jitaas},vlog=/output/vlog,disableSuffixLogs"

ENV JAVA_HOME="/opt/openjdk8-openj9"
